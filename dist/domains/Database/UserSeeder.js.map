{
  "version": 3,
  "sources": ["../../../src/domains/Database/UserSeeder.mjs"],
  "sourcesContent": ["import { PrismaClient, } from '@prisma/client'\nimport { v4 as uuidv4 } from 'uuid';\nimport bcryptjs from \"bcryptjs\"\n\nconst prisma = new PrismaClient()\n\nasync function main() {\n\n    const auths = [\n        { \n        id: uuidv4(),\n        fullname: \"Farhan Rivaldy\", \n        username: \"farhanrivaldy\",\n        email: 'fariv.fariv12@gmail.com',\n        password: bcryptjs.hashSync(\"password123!\", 8) ,\n        avatar: \"https://avatars.githubusercontent.com/u/42530587?v=4\",\n        bio: \"Tech Enthusiast | A newbie at everything\",\n        status: \"active\",\n        role: \"CUSTOMER\"\n     },\n    ];\n\n      \n    for (const authData of auths) {\n        await prisma.auth.create({ data: authData });\n      }\n\n}\nmain()\n  .then(async () => {\n    await prisma.$disconnect()\n  })\n  .catch(async (e) => {\n    console.error(e)\n    await prisma.$disconnect()\n    process.exit(1)\n  })"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,oBAA8B;AAC9B,kBAA6B;AAC7B,sBAAqB;AAErB,MAAM,SAAS,IAAI,2BAAa;AAEhC,eAAe,OAAO;AAElB,QAAM,QAAQ;AAAA,IACV;AAAA,MACA,QAAI,YAAAA,IAAO;AAAA,MACX,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,UAAU,gBAAAC,QAAS,SAAS,gBAAgB,CAAC;AAAA,MAC7C,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,IACT;AAAA,EACD;AAGA,aAAW,YAAY,OAAO;AAC1B,UAAM,OAAO,KAAK,OAAO,EAAE,MAAM,SAAS,CAAC;AAAA,EAC7C;AAEN;AACA,KAAK,EACF,KAAK,YAAY;AAChB,QAAM,OAAO,YAAY;AAC3B,CAAC,EACA,MAAM,OAAO,MAAM;AAClB,UAAQ,MAAM,CAAC;AACf,QAAM,OAAO,YAAY;AACzB,UAAQ,KAAK,CAAC;AAChB,CAAC;",
  "names": ["uuidv4", "bcryptjs"]
}
