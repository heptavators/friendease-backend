{
  "version": 3,
  "sources": ["../../../../src/domains/model/Auth/index.ts"],
  "sourcesContent": ["import { DataTypes, Model } from 'sequelize';\nimport Database  from \"../../../configs/Database\";\nimport { LocationModel } from '../Location';\n\nexport class AuthModel extends Model {\n    authId!: string;\n    locationId!: string;\n    fullname!: string;\n    email!: string;\n    username!: string;\n    password!: string;\n    avatar!: string;\n    bio!: string;\n    status!: string;\n    roles!: string;\n    device_token!: string;\n}\n\n\nAuthModel.init(\n    {\n      authId: {\n        type: DataTypes.UUID,\n        defaultValue: DataTypes.UUID,\n        primaryKey: true,\n        unique: true\n      },\n      locationId: {\n        type: DataTypes.UUID,\n        allowNull: false,\n      },\n      fullname: {\n        type: DataTypes.STRING,\n        allowNull: true,\n      },\n      email: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true\n      },\n      username: {\n        type: DataTypes.STRING,\n        allowNull: true,\n        unique: true\n      },\n      password: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      avatar: {\n        type: DataTypes.STRING,\n        allowNull: true,\n      },\n      bio: {\n        type: DataTypes.STRING,\n        allowNull: true,\n      },\n      status: {\n        type: DataTypes.STRING,\n        allowNull: true,\n      },\n      roles: {\n        type: DataTypes.ENUM,\n        values: ['CUSTOMER', 'ADMIN', 'TALENT'],\n        defaultValue: \"CUSTOMER\"\n    },\n      device_token: {\n        type: DataTypes.STRING,\n        allowNull: true,\n      },\n    },\n    {\n      modelName: 'Auth',\n      sequelize: Database,\n    }\n  );\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiC;AACjC,sBAAsB;AAGf,MAAM,kBAAkB,uBAAM;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAGA,UAAU;AAAA,EACN;AAAA,IACE,QAAQ;AAAA,MACN,MAAM,2BAAU;AAAA,MAChB,cAAc,2BAAU;AAAA,MACxB,YAAY;AAAA,MACZ,QAAQ;AAAA,IACV;AAAA,IACA,YAAY;AAAA,MACV,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACR,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,IACA,OAAO;AAAA,MACL,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACR,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACR,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,IACA,KAAK;AAAA,MACH,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,IACA,OAAO;AAAA,MACL,MAAM,2BAAU;AAAA,MAChB,QAAQ,CAAC,YAAY,SAAS,QAAQ;AAAA,MACtC,cAAc;AAAA,IAClB;AAAA,IACE,cAAc;AAAA,MACZ,MAAM,2BAAU;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,EACF;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,WAAW,gBAAAA;AAAA,EACb;AACF;",
  "names": ["Database"]
}
