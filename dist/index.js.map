{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import express from 'express';\nimport  Router  from './routes';\nimport { logger } from './helpers/Log';\nimport  Database  from './configs/Database';\nimport { DatabaseSeeder } from './domains/seeder/DatabaseSeeder';\nimport timeout from 'connect-timeout';\nimport {SendNotification} from './utils/Notification';\n\ntry {\n  const app = express();\n  Database.sync()\n  const port = \"3000\";\n\nconst checkAuthorization = (req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const authHeader = req.headers.authorization;\n\n  if (!authHeader || authHeader !== 'YourValidToken') {\n    return res.status(401).json({ error: 'Unauthorized' });\n  }\n  next();\n};\n\nconst payload = { \n  message: {\n    token: \"token\"\n  },\n  notification : {\n     title : \"FCM IS COOL !\",\n     body : \"Notification has been received\",\n     content_available : \"true\",\n     image:\"https://i.ytimg.com/vi/iosNuIdQoy8/maxresdefault.jpg\"\n  }\n}\n\n\n  app.use(timeout('10s'))\n  app.use(express.json())\n  app.use(express.urlencoded({extended: true}))\n\n  app.get('/', (req, res) => {\n    res.send('Hello World!');\n  });\n\n  app.get('/seed', checkAuthorization, DatabaseSeeder)\n\n  app.use(\"/api\", Router)\n\n\n  app.listen(port, () => {\n    logger.info(process.env.SECRET_KEYS)\n    logger.info(\"apps running on port \" + port)\n  });\n\n} catch (error: any) {\n  logger.error(\"failed to running apps, error : \" + error.message);\n  process.exit(1);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,qBAAoB;AACpB,oBAAqB;AACrB,iBAAuB;AACvB,sBAAuB;AACvB,4BAA+B;AAC/B,6BAAoB;AAGpB,IAAI;AACF,QAAM,UAAM,eAAAA,SAAQ;AACpB,kBAAAC,QAAS,KAAK;AACd,QAAM,OAAO;AAEf,QAAM,qBAAqB,CAAC,KAAsB,KAAuB,SAA+B;AACtG,UAAM,aAAa,IAAI,QAAQ;AAE/B,QAAI,CAAC,cAAc,eAAe,kBAAkB;AAClD,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,eAAe,CAAC;AAAA,IACvD;AACA,SAAK;AAAA,EACP;AAEA,QAAM,UAAU;AAAA,IACd,SAAS;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA,cAAe;AAAA,MACZ,OAAQ;AAAA,MACR,MAAO;AAAA,MACP,mBAAoB;AAAA,MACpB,OAAM;AAAA,IACT;AAAA,EACF;AAGE,MAAI,QAAI,uBAAAC,SAAQ,KAAK,CAAC;AACtB,MAAI,IAAI,eAAAF,QAAQ,KAAK,CAAC;AACtB,MAAI,IAAI,eAAAA,QAAQ,WAAW,EAAC,UAAU,KAAI,CAAC,CAAC;AAE5C,MAAI,IAAI,KAAK,CAAC,KAAK,QAAQ;AACzB,QAAI,KAAK,cAAc;AAAA,EACzB,CAAC;AAED,MAAI,IAAI,SAAS,oBAAoB,oCAAc;AAEnD,MAAI,IAAI,QAAQ,cAAAG,OAAM;AAGtB,MAAI,OAAO,MAAM,MAAM;AACrB,sBAAO,KAAK,QAAQ,IAAI,WAAW;AACnC,sBAAO,KAAK,0BAA0B,IAAI;AAAA,EAC5C,CAAC;AAEH,SAAS,OAAY;AACnB,oBAAO,MAAM,qCAAqC,MAAM,OAAO;AAC/D,UAAQ,KAAK,CAAC;AAChB;",
  "names": ["express", "Database", "timeout", "Router"]
}
