{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import express from 'express';\nimport  Router  from './routes';\nimport { logger } from './helpers/Log';\nimport  Database  from './configs/Database';\nimport { Product } from './domains/model/Product';\n\nimport { v4 as uuidv4 } from 'uuid';\n\ntry {\n  const app = express();\n  Database.sync()\n  const port = \"3000\";\n\n  \n\n  app.use(express.json())\n  app.use(express.urlencoded({extended: true}))\n\n  app.get('/', (req, res) => {\n    res.send('Hello World!');\n  });\n\n  app.use(\"/api\", Router)\n\n\n  app.listen(port, () => {\n    logger.info(process.env.SECRET_KEYS)\n    logger.info(\"apps running on port \" + port)\n  });\n\n\n} catch (error) {\n  logger.error(\"failed to running apps, error : \" + error);\n  process.exit(1);\n}\n\n\nasync function createProduct(data: any) {\n  // ... (Your validation logic here)\n\n  // Sync the model with the database\n  await Database.sync();\n\n  // Create product in the database\n  const createdProduct = await Product.create(data);\n  return createdProduct;\n}\n\n// Example usage\ncreateProduct({\n  id: uuidv4(),\n  name: 'Example Product',\n  price: 19.99,\n})\n  .then((createdProduct) => {\n    console.log('Product created:', createdProduct.toJSON());\n  })\n  .catch((error) => {\n    console.error('Error:', error.message);\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,qBAAoB;AACpB,oBAAqB;AACrB,iBAAuB;AACvB,sBAAuB;AACvB,qBAAwB;AAExB,kBAA6B;AAE7B,IAAI;AACF,QAAM,UAAM,eAAAA,SAAQ;AACpB,kBAAAC,QAAS,KAAK;AACd,QAAM,OAAO;AAIb,MAAI,IAAI,eAAAD,QAAQ,KAAK,CAAC;AACtB,MAAI,IAAI,eAAAA,QAAQ,WAAW,EAAC,UAAU,KAAI,CAAC,CAAC;AAE5C,MAAI,IAAI,KAAK,CAAC,KAAK,QAAQ;AACzB,QAAI,KAAK,cAAc;AAAA,EACzB,CAAC;AAED,MAAI,IAAI,QAAQ,cAAAE,OAAM;AAGtB,MAAI,OAAO,MAAM,MAAM;AACrB,sBAAO,KAAK,QAAQ,IAAI,WAAW;AACnC,sBAAO,KAAK,0BAA0B,IAAI;AAAA,EAC5C,CAAC;AAGH,SAAS,OAAO;AACd,oBAAO,MAAM,qCAAqC,KAAK;AACvD,UAAQ,KAAK,CAAC;AAChB;AAGA,eAAe,cAAc,MAAW;AAItC,QAAM,gBAAAD,QAAS,KAAK;AAGpB,QAAM,iBAAiB,MAAM,uBAAQ,OAAO,IAAI;AAChD,SAAO;AACT;AAGA,cAAc;AAAA,EACZ,QAAI,YAAAE,IAAO;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AACT,CAAC,EACE,KAAK,CAAC,mBAAmB;AACxB,UAAQ,IAAI,oBAAoB,eAAe,OAAO,CAAC;AACzD,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,UAAQ,MAAM,UAAU,MAAM,OAAO;AACvC,CAAC;",
  "names": ["express", "Database", "Router", "uuidv4"]
}
