{
  "version": 3,
  "sources": ["../../../src/routes/Auth/index.ts"],
  "sourcesContent": ["import { Router } from 'express';\r\nimport { Auth as AuthController } from \"../../controllers/Auth\";\r\nimport SuccessFormatter from '../../helpers/Response/SuccessFormatter';\r\nimport ErrorFormatter from '../../helpers/Response/ErrorFormatter';\r\nimport FailFormatter from '../../helpers/Response/FailFormatter';\r\nimport { logger } from '../../helpers/Log';\r\nimport { Login  as LoginRequest } from '../../domains/web/Login';\r\nimport  Multer  from 'multer';\r\nimport { Validator } from '../../helpers/Validator';\r\n\r\n\r\nconst router = Router();\r\nconst authController = new AuthController()\r\n\r\nconst multer = Multer({\r\n    storage: Multer.memoryStorage(),\r\n    limits: {\r\n      fileSize: 50 * 1024 * 1024, \r\n    },\r\n});\r\n\r\nrouter.get(\"/user\", async function(req, res){\r\n    let {name, page } = req.query as any\r\n    try {\r\n        \r\n        page = req.query.page || 1; \r\n        const data = await authController.find(name, page)\r\n        const count = await authController.count(name)\r\n        const totalPage = Math.ceil(count / 10)\r\n\r\n\r\n        if (data.length != 0){\r\n            const meta = {\r\n                currentPage: page,\r\n                totalPage: totalPage,\r\n                totalItems: count,\r\n                itemPerPage: 10\r\n            }\r\n            const response = SuccessFormatter(\"Data Semua Pengguna\", meta, data)\r\n            res.status(200).send(response)\r\n        }else {\r\n            const response = FailFormatter(\"Pengguna Tidak Ditemukan\");\r\n            res.status(404).send(response)\r\n        }\r\n\r\n    } catch (error: any) {  \r\n        const response = ErrorFormatter(error)\r\n        logger.error(error)\r\n        res.status(500).send(response)\r\n    }\r\n});\r\n\r\nrouter.post(\"/login\", async function (req, res) {\r\n    try {\r\n        const data: LoginRequest = req.body as LoginRequest\r\n        const validate: LoginRequest = Validator.validate(data, LoginRequest.getSchema());\r\n        console.log(validate)\r\n\r\n        if (JSON.stringify(validate) === JSON.stringify(data)) {\r\n            res.status(200).json({ message: \"omke\" });\r\n        } else {\r\n            const response = ErrorFormatter(JSON.stringify(validate));\r\n            res.status(422).json(response);\r\n        }\r\n    } catch (error: any) {\r\n        const response = ErrorFormatter(error)\r\n        logger.error(error)\r\n        res.status(500).send(response)\r\n    }\r\n})\r\n\r\nrouter.post(\"/image\", multer.single(\"image\"), async function(req, res) {\r\n    try {\r\n        console.log(req.file)\r\n\r\n        const response = FailFormatter(\"Login\");\r\n        res.status(200).send(response)\r\n    } catch (error: any) {\r\n        const response = ErrorFormatter(error)\r\n        logger.error(error)\r\n        res.status(500).send(response)\r\n    }\r\n});\r\n\r\nexport default router"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuB;AACvB,kBAAuC;AACvC,8BAA6B;AAC7B,4BAA2B;AAC3B,2BAA0B;AAC1B,iBAAuB;AACvB,mBAAuC;AACvC,oBAAqB;AACrB,uBAA0B;AAG1B,MAAM,aAAS,uBAAO;AACtB,MAAM,iBAAiB,IAAI,YAAAA,KAAe;AAE1C,MAAM,aAAS,cAAAC,SAAO;AAAA,EAClB,SAAS,cAAAA,QAAO,cAAc;AAAA,EAC9B,QAAQ;AAAA,IACN,UAAU,KAAK,OAAO;AAAA,EACxB;AACJ,CAAC;AAED,OAAO,IAAI,SAAS,eAAe,KAAK,KAAI;AACxC,MAAI,EAAC,MAAM,KAAK,IAAI,IAAI;AACxB,MAAI;AAEA,WAAO,IAAI,MAAM,QAAQ;AACzB,UAAM,OAAO,MAAM,eAAe,KAAK,MAAM,IAAI;AACjD,UAAM,QAAQ,MAAM,eAAe,MAAM,IAAI;AAC7C,UAAM,YAAY,KAAK,KAAK,QAAQ,EAAE;AAGtC,QAAI,KAAK,UAAU,GAAE;AACjB,YAAM,OAAO;AAAA,QACT,aAAa;AAAA,QACb;AAAA,QACA,YAAY;AAAA,QACZ,aAAa;AAAA,MACjB;AACA,YAAM,eAAW,wBAAAC,SAAiB,uBAAuB,MAAM,IAAI;AACnE,UAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,IACjC,OAAM;AACF,YAAM,eAAW,qBAAAC,SAAc,0BAA0B;AACzD,UAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,IACjC;AAAA,EAEJ,SAAS,OAAY;AACjB,UAAM,eAAW,sBAAAC,SAAe,KAAK;AACrC,sBAAO,MAAM,KAAK;AAClB,QAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,EACjC;AACJ,CAAC;AAED,OAAO,KAAK,UAAU,eAAgB,KAAK,KAAK;AAC5C,MAAI;AACA,UAAM,OAAqB,IAAI;AAC/B,UAAM,WAAyB,2BAAU,SAAS,MAAM,aAAAC,MAAa,UAAU,CAAC;AAChF,YAAQ,IAAI,QAAQ;AAEpB,QAAI,KAAK,UAAU,QAAQ,MAAM,KAAK,UAAU,IAAI,GAAG;AACnD,UAAI,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,OAAO,CAAC;AAAA,IAC5C,OAAO;AACH,YAAM,eAAW,sBAAAD,SAAe,KAAK,UAAU,QAAQ,CAAC;AACxD,UAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,IACjC;AAAA,EACJ,SAAS,OAAY;AACjB,UAAM,eAAW,sBAAAA,SAAe,KAAK;AACrC,sBAAO,MAAM,KAAK;AAClB,QAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,EACjC;AACJ,CAAC;AAED,OAAO,KAAK,UAAU,OAAO,OAAO,OAAO,GAAG,eAAe,KAAK,KAAK;AACnE,MAAI;AACA,YAAQ,IAAI,IAAI,IAAI;AAEpB,UAAM,eAAW,qBAAAD,SAAc,OAAO;AACtC,QAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,EACjC,SAAS,OAAY;AACjB,UAAM,eAAW,sBAAAC,SAAe,KAAK;AACrC,sBAAO,MAAM,KAAK;AAClB,QAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,EACjC;AACJ,CAAC;AAED,IAAO,eAAQ;",
  "names": ["AuthController", "Multer", "SuccessFormatter", "FailFormatter", "ErrorFormatter", "LoginRequest"]
}
