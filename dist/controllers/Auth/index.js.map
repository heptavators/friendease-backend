{
  "version": 3,
  "sources": ["../../../src/controllers/Auth/index.ts"],
  "sourcesContent": ["import { Auth as AuthService } from \"../../services/Auth\";\r\nimport { AuthRepository } from \"../../repositories/Auth\";\r\nimport { Request, Response } from \"express-serve-static-core\";\r\nimport { ParsedQs } from \"qs\";\r\nimport { logger } from \"../../helpers/Log\";\r\nimport ErrorFormatter from \"../../helpers/Response/ErrorFormatter\";\r\nimport SuccessFormatter from '../../helpers/Response/SuccessFormatter';\r\nimport FailFormatter from '../../helpers/Response/FailFormatter';\r\n\r\nexport class Auth {\r\n    authService: AuthService\r\n\r\n    constructor(authService: AuthService, authRepository: AuthRepository){\r\n        this.authService = new AuthService(authRepository)\r\n    }\r\n\r\n\r\n    \r\n    async signInController(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) {\r\n      try {\r\n        const {id} = req.body\r\n        const result = await this.authService.SignInService(id)\r\n\r\n        if (result){\r\n          const response = SuccessFormatter(\"Data Semua Pengguna\", {}, result)\r\n          res.status(200).send(response)\r\n\r\n        }else {\r\n          const response = FailFormatter(\"Pengguna Tidak Ditemukan\");\r\n          res.status(404).send(response)\r\n\r\n        }} catch (error: any) {\r\n        const response = ErrorFormatter(error);\r\n        logger.error(error);\r\n        res.status(500).send(response);\r\n      }\r\n\r\n\r\n  }\r\n\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC;AAIpC,iBAAuB;AACvB,4BAA2B;AAC3B,8BAA6B;AAC7B,2BAA0B;AAEnB,MAAM,KAAK;AAAA,EACd;AAAA,EAEA,YAAY,aAA0B,gBAA+B;AACjE,SAAK,cAAc,IAAI,YAAAA,KAAY,cAAc;AAAA,EACrD;AAAA,EAIA,MAAM,iBAAiB,KAA2D,KAAiD;AACjI,QAAI;AACF,YAAM,EAAC,GAAE,IAAI,IAAI;AACjB,YAAM,SAAS,MAAM,KAAK,YAAY,cAAc,EAAE;AAEtD,UAAI,QAAO;AACT,cAAM,eAAW,wBAAAC,SAAiB,uBAAuB,CAAC,GAAG,MAAM;AACnE,YAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,MAE/B,OAAM;AACJ,cAAM,eAAW,qBAAAC,SAAc,0BAA0B;AACzD,YAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,MAE/B;AAAA,IAAC,SAAS,OAAY;AACtB,YAAM,eAAW,sBAAAC,SAAe,KAAK;AACrC,wBAAO,MAAM,KAAK;AAClB,UAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,IAC/B;AAAA,EAGJ;AAEF;",
  "names": ["AuthService", "SuccessFormatter", "FailFormatter", "ErrorFormatter"]
}
