{
  "version": 3,
  "sources": ["../../../src/controllers/Auth/index.ts"],
  "sourcesContent": ["import { AuthRepository } from \"../../repositories/Auth\";\r\n\r\n\r\nexport class Auth {\r\n    authRepository: AuthRepository\r\n\r\n    constructor(){\r\n        this.authRepository = new AuthRepository()\r\n    }\r\n\r\n    async find(fullname: string, page: number){\r\n        const gettingTransaction = await this.authRepository.find({\r\n          where: {\r\n            fullname: {\r\n              contains: fullname,\r\n              mode: 'insensitive'\r\n            },\r\n          },\r\n          skip: page > 1 ? 10 * page - 10 : 0,\r\n          take: 10\r\n        })\r\n    \r\n        return gettingTransaction\r\n      }\r\n\r\n\r\n      async count(fullname: string): Promise<any>{\r\n        const countingTransaction = await this.authRepository.count({\r\n          where: {\r\n            fullname: {\r\n              contains: fullname,\r\n              mode: 'insensitive'\r\n            }\r\n          },\r\n        })\r\n        return countingTransaction\r\n      }}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+B;AAGxB,MAAM,KAAK;AAAA,EACd;AAAA,EAEA,cAAa;AACT,SAAK,iBAAiB,IAAI,2BAAe;AAAA,EAC7C;AAAA,EAEA,MAAM,KAAK,UAAkB,MAAa;AACtC,UAAM,qBAAqB,MAAM,KAAK,eAAe,KAAK;AAAA,MACxD,OAAO;AAAA,QACL,UAAU;AAAA,UACR,UAAU;AAAA,UACV,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,MAAM,OAAO,IAAI,KAAK,OAAO,KAAK;AAAA,MAClC,MAAM;AAAA,IACR,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAGA,MAAM,MAAM,UAA+B;AACzC,UAAM,sBAAsB,MAAM,KAAK,eAAe,MAAM;AAAA,MAC1D,OAAO;AAAA,QACL,UAAU;AAAA,UACR,UAAU;AAAA,UACV,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAC;",
  "names": []
}
