{
  "version": 3,
  "sources": ["../../../src/repositories/Auth/index.ts"],
  "sourcesContent": ["import { RegisterRequest } from \"../../domains/web/Login/RegisterRequest\";\r\nimport { AuthModel } from \"../../domains/model/Auth\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class AuthRepository{\r\n\r\n    async findEmail(email: string): Promise<any>  {\r\n        try {\r\n            const data = await AuthModel.findOne({ where: { email } });\r\n            return data;\r\n          } catch (e) {\r\n            throw new Error(`Cannot find data because : ${e}`)\r\n          }\r\n      }\r\n\r\n      async getProfileById(authId: string): Promise<any>{\r\n        try {\r\n            const data = await AuthModel.findByPk(authId, {\r\n                include: ['location'],\r\n                attributes: { exclude: ['password', 'locationId', 'createdAt', 'updatedAt', 'device_token'] },\r\n            })\r\n            return data\r\n        } catch (error) {\r\n            throw new Error(`Cannot find data because : ${error}`)\r\n        }\r\n    }\r\n\r\n    // async getNotificationById(id: string): Promise<any>{\r\n    //     try {\r\n    //         const data = await AuthModel.findByPk(id, {include: [\"notifications\"]})\r\n    //         return data\r\n    //     } catch (error) {\r\n    //         throw new Error(`Cannot find data because : ${error}`)\r\n    //     }\r\n    // }\r\n\r\n    async createUser(registerRequest : RegisterRequest): Promise<any>{\r\n        try {\r\n            console.log(\"status\")\r\n            const newUser = await AuthModel.create({\r\n                authId: uuidv4(),\r\n                email: registerRequest.email,\r\n                password: registerRequest.password\r\n            }, \r\n        );\r\n            return newUser;\r\n        } catch (error) {\r\n            throw new Error(`Cannot create data because : ${error}`)\r\n        }\r\n    }\r\n\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAA0B;AAC1B,kBAA6B;AAEtB,MAAM,eAAc;AAAA,EAEvB,MAAM,UAAU,OAA8B;AAC1C,QAAI;AACA,YAAM,OAAO,MAAM,sBAAU,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;AACzD,aAAO;AAAA,IACT,SAAS,GAAG;AACV,YAAM,IAAI,MAAM,8BAA8B,CAAC,EAAE;AAAA,IACnD;AAAA,EACJ;AAAA,EAEA,MAAM,eAAe,QAA6B;AAChD,QAAI;AACA,YAAM,OAAO,MAAM,sBAAU,SAAS,QAAQ;AAAA,QAC1C,SAAS,CAAC,UAAU;AAAA,QACpB,YAAY,EAAE,SAAS,CAAC,YAAY,cAAc,aAAa,aAAa,cAAc,EAAE;AAAA,MAChG,CAAC;AACD,aAAO;AAAA,IACX,SAAS,OAAO;AACZ,YAAM,IAAI,MAAM,8BAA8B,KAAK,EAAE;AAAA,IACzD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,MAAM,WAAW,iBAAgD;AAC7D,QAAI;AACA,cAAQ,IAAI,QAAQ;AACpB,YAAM,UAAU,MAAM,sBAAU;AAAA,QAAO;AAAA,UACnC,YAAQ,YAAAA,IAAO;AAAA,UACf,OAAO,gBAAgB;AAAA,UACvB,UAAU,gBAAgB;AAAA,QAC9B;AAAA,MACJ;AACI,aAAO;AAAA,IACX,SAAS,OAAO;AACZ,YAAM,IAAI,MAAM,gCAAgC,KAAK,EAAE;AAAA,IAC3D;AAAA,EACJ;AAEJ;",
  "names": ["uuidv4"]
}
