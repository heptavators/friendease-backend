{
  "version": 3,
  "sources": ["../../../src/services/Auth/index.ts"],
  "sourcesContent": ["import { AuthRepository } from \"../../repositories/Auth\";\r\nimport { Login  as LoginRequest } from '../../domains/web/Login';\r\nimport { GenerateJwtToken } from \"../../helpers/JWT\";\r\n\r\nexport class AuthService {\r\n    private authRepository: AuthRepository\r\n\r\n    constructor(authRepository: AuthRepository){\r\n        this.authRepository = new AuthRepository()\r\n    }\r\n\r\n    async SignInService(LoginRequest: LoginRequest) {\r\n        try {\r\n            const user = await this.authRepository.findEmail(LoginRequest.email)\r\n            if (user) {\r\n                if (user.password != LoginRequest.email){\r\n                    console.log(1)\r\n                }\r\n                const token = GenerateJwtToken(user);\r\n                return token;\r\n            }\r\n            \r\n        } catch (error) {\r\n            throw new Error(`Something Wrong: ${error}`);\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+B;AAE/B,iBAAiC;AAE1B,MAAM,YAAY;AAAA,EACb;AAAA,EAER,YAAY,gBAA+B;AACvC,SAAK,iBAAiB,IAAI,2BAAe;AAAA,EAC7C;AAAA,EAEA,MAAM,cAAcA,eAA4B;AAC5C,QAAI;AACA,YAAM,OAAO,MAAM,KAAK,eAAe,UAAUA,cAAa,KAAK;AACnE,UAAI,MAAM;AACN,YAAI,KAAK,YAAYA,cAAa,OAAM;AACpC,kBAAQ,IAAI,CAAC;AAAA,QACjB;AACA,cAAM,YAAQ,6BAAiB,IAAI;AACnC,eAAO;AAAA,MACX;AAAA,IAEJ,SAAS,OAAO;AACZ,YAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,IAC/C;AAAA,EACF;AAKN;",
  "names": ["LoginRequest"]
}
